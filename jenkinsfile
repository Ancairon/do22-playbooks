pipeline {
    agent any
    stages {
        stage('Prepare machine for deployment'){
            steps{

                sh "sudo snap install microk8s --classic"

                sh "sudo apt install docker.io"

                sh "sudo usermod -a -G microk8s jenkins"

                sh "sudo mkdir -p /.kube"

                sh "sudo chown -f -R jenkins ~/.kube"

                sh "sudo ufw default allow routed"

                sh "microk8s.enable dns storage ingress helm3 registry"

                sh "sudo ufw allow in on ens4 && sudo ufw allow out on ens4"
            }
        }
        stage('Clone Repositories'){
            steps{
                sh "git clone -b keycloak https://github.com/thanbimp/Recommendation-Letter-Service.git"
            }
        }

        stage('Copy some files'){
            steps{
                sh "mv playbooks/files/application.properties Recommendation-Letter-Service/application.properties"

                sh "sudo cp playbooks/files/keycloak_realm.json /opt/realm.json"
            }
        }

        stage ('Build application jar and image'){
            steps{
                
                sh "sudo chmod 666 /var/run/docker.sock"
                
                sh "cd Recommendation-Letter-Service && chmod +x mvnw"

                sh "cd Recommendation-Letter-Service && ./mvnw package -DskipTests"

                sh "cd Recommendation-Letter-Service && docker build . -t localhost:32000/spring-boot-app:latest"

                sh "docker push localhost:32000/spring-boot-app"

                sh "sudo rm -rf Recommendation-Letter-Service/"
            }
        }

        stage ('Deploy Kubernetes'){
            steps{
                // sh "microk8s.kubectl create -f playbooks/files/kubernetes/keycloak-ingress.yml"

                sh "sudo microk8s kubectl create -f playbooks/files/kubernetes/keycloak-ingress.yml --dry-run=client -o yaml | sudo microk8s kubectl apply -f -"

                sh "sudo microk8s kubectl create -f https://raw.githubusercontent.com/keycloak/keycloak-quickstarts/latest/kubernetes-examples/keycloak.yaml --dry-run=client -o yaml | sudo microk8s kubectl apply -f -"
                //sh "sudo microk8s kubectl create -f playbooks/files/kubernetes/keycloak.yml --dry-run=client -o yaml | sudo microk8s kubectl apply -f -"

                sh "microk8s.kubectl apply -f playbooks/files/kubernetes/spring-boot-app-deployment.yaml"

                sh "microk8s.kubectl apply -f playbooks/files/kubernetes/spring-boot-app-service.yaml"

                sh "microk8s.kubectl apply -f playbooks/files/kubernetes/spring-ingress.yml"

                sh "microk8s.kubectl apply -f playbooks/files/kubernetes/mysql-pv.yml"

                sh "microk8s.kubectl apply -f playbooks/files/kubernetes/mysql-pvc.yml"

                sh "microk8s.kubectl apply -f playbooks/files/kubernetes/mysql.yml"

                sh "microk8s.kubectl apply -f playbooks/files/kubernetes/mysql-service.yml"

                sh "sudo microk8s helm3 repo add codecentric https://codecentric.github.io/helm-charts && microk8s helm3 upgrade --install mailhog codecentric/mailhog"

            }
        }
    }
}